spring.application.name=bank-service

spring.datasource.driverClassName=org.postgresql.Driver
spring.profiles.active=dev
com.bank.cache.redis.ttl-minutes=5

# HikariCP specific settings
spring.datasource.hikari.pool-name=PostgresHikariPool
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000

# Actuator configuration
# http://localhost:8080/actuator/metrics
# http://localhost:8080/actuator/metrics/hikaricp.connections.active?tag=pool:MyHikariPool
management.endpoints.web.exposure.include=health,metrics,prometheus
management.metrics.export.prometheus.enabled=true


# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# default is 8080
# server.port=8000

# By default,
# Spring Boot automatically configures and starts an embedded web server (e.g., Tomcat, Jetty, or Netty) if:
# The spring-boot-starter-web or spring-boot-starter-webflux dependency is included in your project.
# There are web-related components in your application, such as:
# @RestController or @Controller classes.
# Servlets, Filters, or other web-related beans.
# If neither of these conditions is met, Spring Boot will not start the web server.

# explicitly disable the web server
# spring.main.web-application-type=NONE